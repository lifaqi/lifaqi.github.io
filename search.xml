<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[机器学习线性回归]]></title>
    <url>%2F2018%2F08%2F10%2F%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%2F</url>
    <content type="text"><![CDATA[Demo： 12345678910111213import numpy as npimport matplotlib.pyplot as pltimport tensorflow as tfnum_points = 1000vectors_set = []for i in range(num_points): x1 = np.random.normal(0.0, 0.55) y1 = x1 * 0.1 + 0.3 + np.random.normal(0.0, 0.03) vectors_set.append([x1, y1])x_data = [v[0] for v in vectors_set]y_data = [v[1] for v in vectors_set] 1234567891011121314151617181920212223242526272829303132# Graphic displayplt.plot(x_data, y_data, &apos;ro&apos;)plt.legend()plt.show()W = tf.Variable(tf.random_uniform([1], -1.0, 1.0))b = tf.Variable(tf.zeros([1]))y = W * x_data + bloss = tf.reduce_mean(tf.square(y - y_data))optimizer = tf.train.GradientDescentOptimizer(0.5)train = optimizer.minimize(loss)init = tf.initialize_all_variables()sess = tf.Session()sess.run(init)for step in range(20): sess.run(train) print(step, sess.run(W), sess.run(b)) print(step, sess.run(loss)) # Graphic display plt.plot(x_data, y_data, &apos;ro&apos;) plt.plot(x_data, sess.run(W) * x_data + sess.run(b)) plt.xlabel(&apos;x&apos;) plt.xlim(-2, 2) plt.ylim(0.1, 0.6) plt.ylabel(&apos;y&apos;) plt.legend() plt.show() 效果图：]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Git丢失文件找回]]></title>
    <url>%2F2018%2F08%2F07%2FGit%E4%B8%A2%E5%A4%B1%E6%96%87%E4%BB%B6%E6%89%BE%E5%9B%9E%2F</url>
    <content type="text"><![CDATA[1、cd到项目文件目录下 2、查看git日志： 1$ git log 3、根据日志的编码，重置到之前正确的一次提交： 1$ git reset --hard 283f742b9c5bb3e10431205e43933b24286355f7 4、效果图：]]></content>
      <categories>
        <category>Git应用</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[PyCharm2018破解]]></title>
    <url>%2F2018%2F08%2F07%2FPyCharm2018%E7%A0%B4%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[1、到官网去下载PyCharm 2、下载破解补丁 密码:sqgc 3、将补丁复制到你的PyCharm的安装目录下的lib文件夹中 4、在PyCharm安装目录下找到bin目录，然后进入bin文件夹找到pycharm.vmoptions文件，用记事本打开，在末尾一行追加： -javaagent:/Applications/PyCharm.app/Contents/lib/JetbrainsCrack-2.8-release-enc.jar 注：/Applications/PyCharm.app/Contents/lib/JetbrainsCrack-2.8-release-enc.jar是JetbrainsCrack-2.8-release-enc.jar的路径 5、打开你的PyCharm客户端，在Activation code界面中填入以下代码 ： 1234567891011121314151617181920212223242526&#123;&quot;licenseId&quot;:&quot;ThisCrackLicenseId&quot;,&quot;licenseeName&quot;:&quot;Rover12421&quot;,&quot;assigneeName&quot;:&quot;Rover12421&quot;,&quot;assigneeEmail&quot;:&quot;rover12421@163.com&quot;,&quot;licenseRestriction&quot;:&quot;By Rover12421 Crack, Only Test! Please support genuine!!!&quot;,&quot;checkConcurrentUse&quot;:false,&quot;products&quot;:[&#123;&quot;code&quot;:&quot;II&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,&#123;&quot;code&quot;:&quot;DM&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,&#123;&quot;code&quot;:&quot;AC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,&#123;&quot;code&quot;:&quot;RS0&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,&#123;&quot;code&quot;:&quot;WS&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,&#123;&quot;code&quot;:&quot;DPN&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,&#123;&quot;code&quot;:&quot;RC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,&#123;&quot;code&quot;:&quot;PS&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,&#123;&quot;code&quot;:&quot;DC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,&#123;&quot;code&quot;:&quot;RM&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,&#123;&quot;code&quot;:&quot;CL&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,&#123;&quot;code&quot;:&quot;PC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,&#123;&quot;code&quot;:&quot;DB&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,&#123;&quot;code&quot;:&quot;GO&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,&#123;&quot;code&quot;:&quot;RD&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;],&quot;hash&quot;:&quot;2911276/0&quot;,&quot;gracePeriodDays&quot;:7,&quot;autoProlongated&quot;:false&#125;]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Python多线程threading]]></title>
    <url>%2F2018%2F08%2F07%2FPython%E5%A4%9A%E7%BA%BF%E7%A8%8Bthreading%2F</url>
    <content type="text"><![CDATA[123456789101112import timeimport threadingimport requestsheaders = &#123; 'authorization': 'www.zhihu.com', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36', 'cookie': 'd_c0="ADCimU9GoA2PTuwqBBtf7zgvunKrfCVtv2A=|1526874149"; _zap=00e791df-6c80-4e35-80c4-2acffd67869f; q_c1=a4340fbcb86a444f9c0b089763296002|1526884622000|1526884622000; l_cap_id="YTEwZTFjODJiYWQ2NDk3M2I0NjVhMTFiZTJhYTVmZGU=|1526885234|daa6426325707c6423a8aa05baba3a2ea6e8ea60"; r_cap_id="ZTJkN2EwYWNlNTI5NDVkYWJhM2FmNWNmMzJjYmUwOTU=|1526885234|a4d99bee7fe65ac0bca9ca13890b548005854d45"; cap_id="MWMwNjBjMTNiYjMwNDEwZWEwZmY3MjQxOGE1NTZiNmM=|1526885234|ae7bc3b85097120806f19065a89a940a04055157"; capsion_ticket="2|1:0|10:1526888690|14:capsion_ticket|44:NGMwODJhMjQyODUzNGQ2ODk3MjgzYTgzNjlhNmI5Yjg=|913742186b626c392c95328db7fced52ea4633c7b24290589c66ab9ca70f2db1"; z_c0="2|1:0|10:1526888730|4:z_c0|92:Mi4xSFJjNENBQUFBQUFBTUtLWlQwYWdEU1lBQUFCZ0FsVk5Hc2Z2V3dCQldORkRDdXdINXFIdXBmcHliYVJMUExjdVJ3|384372d5e04e3497ebb7273823b1c12a9a5ee53e66324a06b852eb5404f3f9c0"; _xsrf=7fafb0c2-bd35-4f18-a243-d20d294ebb44; tgw_l7_route=860ecf76daf7b83f5a2f2dc22dccf049'&#125;URL = 'https://www.zhihu.com/api/v4/members/shen-wu-yue-72-74/followees? 123456789101112131415161718192021include=data%5B*%5D.answer_count,articles_count,gender,follower_count,is_followed,is_following,badge%5B?(type%3Dbest_answerer)%5D.topics&amp;offset=0&amp;limit=20'def job(): response = requests.get(URL, headers=headers).json() print(response)def main(): threads = [threading.Thread(target=job) for index in range(20)] for t in threads: t.start() for t in threads: t.join()if __name__ == '__main__': t1 = time.time() main() print("花费时间:", time.time() - t1)]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Mac系统显示/隐藏文件]]></title>
    <url>%2F2018%2F08%2F07%2FMac%E7%B3%BB%E7%BB%9F%E6%98%BE%E7%A4%BA-%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[1、通过快捷键Command+Shift+. 可以显示隐藏文件、文件夹，再按一次，恢复隐藏 2、通过终端命令来显示或隐藏在终端（Terminal）输入如下命令： —显示文件 defaults write com.apple.finder AppleShowAllFiles -boolean true; killall Finder —隐藏文件 defaults write com.apple.finder AppleShowAllFiles -boolean false ; killall Finder 3、通过终端来查找打开终端，进入到要找的隐藏文件目录下，输入：ls -a，就可以看到所有的文件，包括隐藏文件]]></content>
      <categories>
        <category>Mac电脑应用</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Mac电脑怎么查看已连接WiFi的密码]]></title>
    <url>%2F2018%2F08%2F06%2FMac%E7%94%B5%E8%84%91%E6%80%8E%E4%B9%88%E6%9F%A5%E7%9C%8B%E5%B7%B2%E8%BF%9E%E6%8E%A5WiFi%E7%9A%84%E5%AF%86%E7%A0%81%2F</url>
    <content type="text"><![CDATA[1、首先打开系统自带的”钥匙串访问“工具 2、点击左侧的”所有项目“ 3、查找WiFi的名字，由于里面的内容可能比较多，可以用右上角的搜索框进行搜索 4、双击后，弹出一个框，点击显示密码框 5、然后会弹出一个框，输入钥匙串密码 6、输入密码，确认后，就可以看到该WiFi的密码了。]]></content>
      <categories>
        <category>Mac电脑应用</category>
      </categories>
  </entry>
</search>
